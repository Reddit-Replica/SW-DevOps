version: "3"
services:

  web_server:
    image: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - Readit
    restart: always
    depends_on:
      - frontend
      - backend
      - flutterweb
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../certbot/www/:/var/www/certbot/:ro
      - ../certbot/conf/:/etc/nginx/ssl/:ro

  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ../certbot/conf/:/etc/letsencrypt/
  #     - ../certbot/www/:/var/www/certbot/
  #   command: certonly --webroot -w /var/www/certbot --force-renewal --email elwaeryousef1@gmail.com -d www.read-it.live --agree-tos

  mongodb:
    container_name: mongodb
    image: mongo
    command: mongod --auth
    restart: unless-stopped
    env_file: ./envfiles/DB.env
    networks:
      - private
    volumes:
      - /Read-it/mongoData:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    

  backend:
    restart: unless-stopped
    image: waer/backend:latest
    env_file: ./envfiles/backend.env
    networks:
      - frontend_net
      - private
      - flutter_net
      - Readit
    depends_on:
      - mongodb
    links:
      - mongodb
    volumes:
      - /Read-it/Backend/images/:/usr/src/app/images
      - /Read-it/Backend/log/:/usr/src/app/logs
      - /Read-it/Backend/videos/:/usr/src/app/videos
      - /Read-it/Backend/private:/usr/src/app/private

    # deploy:
    #   mode: replicated
    #   replicas: 15

    
  frontend:
    image: waer/frontend:latest
    env_file: ./envfiles/frontend.env
    networks:
      - frontend_net
      - Readit
    depends_on:
      - backend
    restart: always
    # deploy:
    #   mode: replicated
    #   replicas: 10

  flutterweb:
    image: waer/flutterweb:latest
    env_file: ./envfiles/Flutter.env
    networks:
      - flutter_net
      - Readit
    depends_on:
      - backend
    restart: always
    deploy:
      mode: replicated
      replicas: 2

networks:
  private:
  frontend_net:
  flutter_net:
  Readit:
